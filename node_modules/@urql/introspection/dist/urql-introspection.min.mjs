import{buildSchema as e,execute as a,parse as n,getIntrospectionQuery as t}from"graphql";var r=r=>{if("string"==typeof r)try{r=JSON.parse(r)}catch(a){r=e(r)}if("object"==typeof r&&"__schema"in r)return r;var i=a({document:n(t({descriptions:!1})),schema:r});if(!i.data||!i.data.__schema)throw new TypeError("GraphQL could not generate an IntrospectionQuery from the given schema.");return i.data},i=!1,s=!1,p=!1,m=!1,c={kind:"SCALAR",name:"Any"},d=e=>{switch(e.kind){case"NON_NULL":case"LIST":return{kind:e.kind,ofType:d(e.ofType)};case"SCALAR":return i?e:(m=!0,c);case"INPUT_OBJECT":return p?e:(m=!0,c);case"ENUM":return s?e:(m=!0,c);case"OBJECT":case"INTERFACE":case"UNION":return e;default:throw new TypeError(`Unrecognized type reference of type: ${e.kind}.`)}},u=e=>{switch(e.kind){case"SCALAR":return{kind:"SCALAR",name:e.name};case"ENUM":return{kind:"ENUM",name:e.name,enumValues:e.enumValues.map((e=>({name:e.name})))};case"INPUT_OBJECT":return{kind:"INPUT_OBJECT",name:e.name,inputFields:e.inputFields.map((e=>({name:e.name,type:d(e.type),defaultValue:e.defaultValue||void 0})))};case"OBJECT":return{kind:"OBJECT",name:e.name,fields:e.fields.map((e=>({name:e.name,type:e.type&&d(e.type),args:e.args&&e.args.map((e=>({name:e.name,type:d(e.type)})))}))),interfaces:e.interfaces&&e.interfaces.map((e=>({kind:"INTERFACE",name:e.name})))};case"INTERFACE":return{kind:"INTERFACE",name:e.name,fields:e.fields.map((e=>({name:e.name,type:e.type&&d(e.type),args:e.args&&e.args.map((e=>({name:e.name,type:d(e.type)})))}))),interfaces:e.interfaces&&e.interfaces.map((e=>({kind:"INTERFACE",name:e.name}))),possibleTypes:e.possibleTypes&&e.possibleTypes.map((e=>({kind:e.kind,name:e.name})))};case"UNION":return{kind:"UNION",name:e.name,possibleTypes:e.possibleTypes.map((e=>({kind:e.kind,name:e.name})))};default:return e}},o=(e,a={})=>{if(!e||!("__schema"in e))throw new TypeError("Expected to receive an IntrospectionQuery.");m=!1,i=!!a.includeScalars,s=!!a.includeEnums,p=!!a.includeInputs;var{__schema:{queryType:n,mutationType:t,subscriptionType:r,types:o,directives:y}}=e,l=o.filter((e=>{switch(e.name){case"__Directive":case"__DirectiveLocation":case"__EnumValue":case"__InputValue":case"__Field":case"__Type":case"__TypeKind":case"__Schema":return!1;default:return i&&"SCALAR"===e.kind||s&&"ENUM"===e.kind||p&&"INPUT_OBJECT"===e.kind||"OBJECT"===e.kind||"INTERFACE"===e.kind||"UNION"===e.kind}})).map(u);m&&l.push({kind:"SCALAR",name:c.name});var T=[];return a.includeDirectives&&(T=(y||[]).map((e=>({name:e.name,isRepeatable:!!e.isRepeatable||void 0,locations:e.locations,args:e.args.map((e=>({name:e.name,type:d(e.type),defaultValue:e.defaultValue||void 0})))})))),{__schema:{queryType:n,mutationType:t,subscriptionType:r,types:l,directives:T}}};export{r as getIntrospectedSchema,o as minifyIntrospectionQuery};
//# sourceMappingURL=urql-introspection.min.mjs.map
