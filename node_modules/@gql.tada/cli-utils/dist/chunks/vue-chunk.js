var e = require("typescript");

var r = require("@vue/language-core");

var t = require("@vue/compiler-dom");

function _interopNamespaceDefault(e) {
  var r = Object.create(null);
  if (e) {
    Object.keys(e).forEach((function(t) {
      if ("default" !== t) {
        var a = Object.getOwnPropertyDescriptor(e, t);
        Object.defineProperty(r, t, a.get ? a : {
          enumerable: !0,
          get: function() {
            return e[t];
          }
        });
      }
    }));
  }
  r.default = e;
  return r;
}

var a = _interopNamespaceDefault(r);

var i = _interopNamespaceDefault(t);

var o;

if ("VueVirtualCode" in a) {
  o = a.VueVirtualCode;
} else if ("VueGeneratedCode" in a) {
  o = a.VueGeneratedCode;
}

var u = a.resolveVueCompilerOptions({});

var n;

exports.transform = t => {
  if (!o) {
    return;
  } else if (!n) {
    n = r.getDefaultVueLanguagePlugins({
      modules: {
        typescript: e,
        "@vue/compiler-dom": i
      },
      compilerOptions: {},
      globalTypesHolder: void 0,
      vueCompilerOptions: u
    });
  }
  var a = e.ScriptSnapshot.fromString(t.getFullText());
  var l = new o(t.fileName, "vue", a, u, n, ...[ e, !1 ]);
  for (var p of r.forEachEmbeddedCode(l)) {
    if (p.id.startsWith("script_")) {
      return p;
    }
  }
};
//# sourceMappingURL=vue-chunk.js.map
