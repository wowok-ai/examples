{"version":3,"file":"thread-chunk3.js","sources":["../../src/commands/check/thread.ts"],"sourcesContent":["import * as path from 'node:path';\nimport { Project, ts } from 'ts-morph';\n\nimport type { GraphQLSPConfig } from '@gql.tada/internal';\nimport { load } from '@gql.tada/internal';\nimport { init, getGraphQLDiagnostics } from '@0no-co/graphqlsp/api';\n\nimport { createPluginInfo, getFilePosition } from '../../ts';\nimport { expose } from '../../threads';\n\nimport type { Severity, DiagnosticMessage, DiagnosticSignal } from './types';\n\nexport interface DiagnosticsParams {\n  rootPath: string;\n  configPath: string;\n  pluginConfig: GraphQLSPConfig;\n}\n\nasync function* _runDiagnostics(\n  params: DiagnosticsParams\n): AsyncIterableIterator<DiagnosticSignal> {\n  init({ typescript: ts as any });\n  const projectPath = path.dirname(params.configPath);\n  const loader = load({ origin: params.pluginConfig.schema, rootPath: projectPath });\n  const project = new Project({ tsConfigFilePath: params.configPath });\n  const pluginInfo = createPluginInfo(project, params.pluginConfig, projectPath);\n\n  const loadResult = await loader.load();\n  const schemaRef = { current: loadResult.schema, version: 1 };\n\n  // Filter source files by whether they're under the relevant root path\n  const sourceFiles = project.getSourceFiles().filter((sourceFile) => {\n    const filePath = path.resolve(projectPath, sourceFile.getFilePath());\n    const relative = path.relative(params.rootPath, filePath);\n    return !relative.startsWith('..');\n  });\n\n  yield {\n    kind: 'FILE_COUNT',\n    fileCount: sourceFiles.length,\n  };\n\n  for (const { compilerNode: sourceFile } of sourceFiles) {\n    const filePath = sourceFile.fileName;\n    const diagnostics = getGraphQLDiagnostics(filePath, schemaRef, pluginInfo);\n    const messages: DiagnosticMessage[] = [];\n\n    if (diagnostics && diagnostics.length) {\n      for (const diagnostic of diagnostics) {\n        if (\n          !('messageText' in diagnostic) ||\n          typeof diagnostic.messageText !== 'string' ||\n          !diagnostic.file\n        ) {\n          continue;\n        }\n        let severity: Severity = 'info';\n        if (diagnostic.category === ts.DiagnosticCategory.Error) {\n          severity = 'error';\n        } else if (diagnostic.category === ts.DiagnosticCategory.Warning) {\n          severity = 'warn';\n        }\n        const position = getFilePosition(sourceFile, diagnostic.start, diagnostic.length);\n        messages.push({\n          severity,\n          message: diagnostic.messageText,\n          file: diagnostic.file.fileName,\n          line: position.line,\n          col: position.col,\n          endLine: position.endLine,\n          endColumn: position.endColumn,\n        });\n      }\n    }\n\n    yield {\n      kind: 'FILE_DIAGNOSTICS',\n      filePath,\n      messages,\n    };\n  }\n}\n\nexport const runDiagnostics = expose(_runDiagnostics);\n"],"names":["runDiagnostics","expose","async","_runDiagnostics","params","init","typescript","ts","projectPath","path","dirname","configPath","loader","load","origin","pluginConfig","schema","rootPath","project","Project","tsConfigFilePath","pluginInfo","createPluginInfo","schemaRef","current","version","sourceFiles","getSourceFiles","filter","sourceFile","filePath","resolve","getFilePath","relative","startsWith","kind","fileCount","length","compilerNode","fileName","diagnostics","getGraphQLDiagnostics","messages","diagnostic","messageText","file","severity","category","DiagnosticCategory","Error","Warning","position","getFilePosition","start","push","message","line","col","endLine","endColumn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmFaA,IAAiBC,EAAMA,QAjEpCC,gBAAgBC,gBACdC;EAEAC,OAAK;IAAEC,YAAYC,EAAAA;;EACnB,IAAMC,IAAcC,EAAKC,QAAQN,EAAOO;EACxC,IAAMC,IAASC,EAAAA,KAAK;IAAEC,QAAQV,EAAOW,aAAaC;IAAQC,UAAUT;;EACpE,IAAMU,IAAU,IAAIC,UAAQ;IAAEC,kBAAkBhB,EAAOO;;EACvD,IAAMU,IAAaC,EAAAA,iBAAiBJ,GAASd,EAAOW,cAAcP;EAGlE,IAAMe,IAAY;IAAEC,gBADKZ,EAAOC,QACQG;IAAQS,SAAS;;EAGzD,IAAMC,IAAcR,EAAQS,iBAAiBC,QAAQC;IACnD,IAAMC,IAAWrB,EAAKsB,QAAQvB,GAAaqB,EAAWG;IAEtD,QADiBvB,EAAKwB,SAAS7B,EAAOa,UAAUa,GAC/BI,WAAW;AAAK;QAG7B;IACJC,MAAM;IACNC,WAAWV,EAAYW;;EAGzB,KAAK,KAAQC,cAAcT,MAAgBH,GAAa;IACtD,IAAMI,IAAWD,EAAWU;IAC5B,IAAMC,IAAcC,EAAqBA,sBAACX,GAAUP,GAAWF;IAC/D,IAAMqB,IAAgC;IAEtC,IAAIF,KAAeA,EAAYH;MAC7B,KAAK,IAAMM,KAAcH,GAAa;QACpC,MACI,iBAAiBG,MACe,mBAA3BA,EAAWC,gBACjBD,EAAWE;UAEZ;;QAEF,IAAIC,IAAqB;QACzB,IAAIH,EAAWI,aAAaxC,KAAGyC,mBAAmBC;UAChDH,IAAW;eACN,IAAIH,EAAWI,aAAaxC,EAAAA,GAAGyC,mBAAmBE;UACvDJ,IAAW;;QAEb,IAAMK,IAAWC,EAAAA,gBAAgBvB,GAAYc,EAAWU,OAAOV,EAAWN;QAC1EK,EAASY,KAAK;UACZR;UACAS,SAASZ,EAAWC;UACpBC,MAAMF,EAAWE,KAAKN;UACtBiB,MAAML,EAASK;UACfC,KAAKN,EAASM;UACdC,SAASP,EAASO;UAClBC,WAAWR,EAASQ;;AAExB;;UAGI;MACJxB,MAAM;MACNL;MACAY;;AAEJ;AACF;;"}