import e from "typescript";

import * as r from "@vue/language-core";

import { getDefaultVueLanguagePlugins as o, forEachEmbeddedCode as i } from "@vue/language-core";

import * as t from "@vue/compiler-dom";

var a;

if ("VueVirtualCode" in r) {
  a = r.VueVirtualCode;
} else if ("VueGeneratedCode" in r) {
  a = r.VueGeneratedCode;
}

var p = r.resolveVueCompilerOptions({});

var l;

var transform = r => {
  if (!a) {
    return;
  } else if (!l) {
    l = o({
      modules: {
        typescript: e,
        "@vue/compiler-dom": t
      },
      compilerOptions: {},
      globalTypesHolder: void 0,
      vueCompilerOptions: p
    });
  }
  var u = e.ScriptSnapshot.fromString(r.getFullText());
  var m = new a(r.fileName, "vue", u, p, l, ...[ e, !1 ]);
  for (var s of i(m)) {
    if (s.id.startsWith("script_")) {
      return s;
    }
  }
};

export { transform };
//# sourceMappingURL=vue-chunk.mjs.map
